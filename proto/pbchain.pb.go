// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/pbchain.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Script opcodes used by P2PK and P2PKH
type Op int32

const (
	// Push an empty array of bytes onto the stack
	Op_OP_0 Op = 0
	// Marks transaction as invalid if top stack value is false, and remove the top stack item
	Op_OP_VERIFY Op = 105
	// Duplicate the top stack item
	Op_OP_DUP Op = 118
	// Push 1 onto the stack if the top two items are exactly equal, 0 otherwise
	Op_OP_EQUAL Op = 135
	// OP_EQUAL followed by an OP_VERIFY
	Op_OP_EQUALVERIFY Op = 136
	// RIPEMD-160(SHA-256(top stack item))
	Op_OP_HASH160 Op = 169
	// Check if the hash of the transaction matches with the signature
	Op_OP_CHECKSIG Op = 172
)

// Enum value maps for Op.
var (
	Op_name = map[int32]string{
		0:   "OP_0",
		105: "OP_VERIFY",
		118: "OP_DUP",
		135: "OP_EQUAL",
		136: "OP_EQUALVERIFY",
		169: "OP_HASH160",
		172: "OP_CHECKSIG",
	}
	Op_value = map[string]int32{
		"OP_0":           0,
		"OP_VERIFY":      105,
		"OP_DUP":         118,
		"OP_EQUAL":       135,
		"OP_EQUALVERIFY": 136,
		"OP_HASH160":     169,
		"OP_CHECKSIG":    172,
	}
)

func (x Op) Enum() *Op {
	p := new(Op)
	*p = x
	return p
}

func (x Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pbchain_proto_enumTypes[0].Descriptor()
}

func (Op) Type() protoreflect.EnumType {
	return &file_proto_pbchain_proto_enumTypes[0]
}

func (x Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op.Descriptor instead.
func (Op) EnumDescriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{0}
}

// A block header contains metadata about the block
type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block version number
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// The hash value of the previous block header
	PrevBlock []byte `protobuf:"bytes,2,opt,name=prev_block,json=prevBlock,proto3" json:"prev_block,omitempty"`
	// A hash of all transactions included in the block
	MerkleRoot []byte `protobuf:"bytes,3,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	// Unix epoch in seconds of when the block was created
	Timestamp uint32 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The difficulty target being used for the block
	Bits uint32 `protobuf:"varint,5,opt,name=bits,proto3" json:"bits,omitempty"`
	// The nonce used to generate the block
	Nonce uint32 `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{0}
}

func (x *BlockHeader) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BlockHeader) GetPrevBlock() []byte {
	if x != nil {
		return x.PrevBlock
	}
	return nil
}

func (x *BlockHeader) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *BlockHeader) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockHeader) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *BlockHeader) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// A block contains a block header and all the transactions associated with the block
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block header
	Header *BlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// A list of transactions
	Txs []*Transaction `protobuf:"bytes,2,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetTxs() []*Transaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

// A transaction defines the movement of coins
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Protocol version number
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// A list of transaction inputs
	TxIns []*TxIn `protobuf:"bytes,2,rep,name=tx_ins,json=txIns,proto3" json:"tx_ins,omitempty"`
	// A list of transaction outputs
	TxOuts []*TxOut `protobuf:"bytes,3,rep,name=tx_outs,json=txOuts,proto3" json:"tx_outs,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Transaction) GetTxIns() []*TxIn {
	if x != nil {
		return x.TxIns
	}
	return nil
}

func (x *Transaction) GetTxOuts() []*TxOut {
	if x != nil {
		return x.TxOuts
	}
	return nil
}

// A transaction input
type TxIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The reference to the previous transaction output
	PrevOutput *OutPoint `protobuf:"bytes,1,opt,name=prev_output,json=prevOutput,proto3" json:"prev_output,omitempty"`
	// The computational script for confirming transaction requirements
	ScriptSig []*Instruc `protobuf:"bytes,2,rep,name=script_sig,json=scriptSig,proto3" json:"script_sig,omitempty"`
}

func (x *TxIn) Reset() {
	*x = TxIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxIn) ProtoMessage() {}

func (x *TxIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxIn.ProtoReflect.Descriptor instead.
func (*TxIn) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{3}
}

func (x *TxIn) GetPrevOutput() *OutPoint {
	if x != nil {
		return x.PrevOutput
	}
	return nil
}

func (x *TxIn) GetScriptSig() []*Instruc {
	if x != nil {
		return x.ScriptSig
	}
	return nil
}

// A transaction output
type TxOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transaction value of the output
	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// Conditions to claim the output
	ScriptPubkey []*Instruc `protobuf:"bytes,2,rep,name=script_pubkey,json=scriptPubkey,proto3" json:"script_pubkey,omitempty"`
}

func (x *TxOut) Reset() {
	*x = TxOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOut) ProtoMessage() {}

func (x *TxOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOut.ProtoReflect.Descriptor instead.
func (*TxOut) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{4}
}

func (x *TxOut) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TxOut) GetScriptPubkey() []*Instruc {
	if x != nil {
		return x.ScriptPubkey
	}
	return nil
}

// A reference to a transaction output
type OutPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The referenced transaction's identifier
	Txid []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	// The index of the referenced output in its transaction's output list
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *OutPoint) Reset() {
	*x = OutPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutPoint) ProtoMessage() {}

func (x *OutPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutPoint.ProtoReflect.Descriptor instead.
func (*OutPoint) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{5}
}

func (x *OutPoint) GetTxid() []byte {
	if x != nil {
		return x.Txid
	}
	return nil
}

func (x *OutPoint) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// An instruction used for the processing of transactions
type Instruc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An instruction can be one of a script opcode, a number, or a byte slice data
	//
	// Types that are assignable to Instruc:
	//	*Instruc_Op
	//	*Instruc_Number
	//	*Instruc_Data
	Instruc isInstruc_Instruc `protobuf_oneof:"instruc"`
}

func (x *Instruc) Reset() {
	*x = Instruc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruc) ProtoMessage() {}

func (x *Instruc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruc.ProtoReflect.Descriptor instead.
func (*Instruc) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{6}
}

func (m *Instruc) GetInstruc() isInstruc_Instruc {
	if m != nil {
		return m.Instruc
	}
	return nil
}

func (x *Instruc) GetOp() Op {
	if x, ok := x.GetInstruc().(*Instruc_Op); ok {
		return x.Op
	}
	return Op_OP_0
}

func (x *Instruc) GetNumber() int64 {
	if x, ok := x.GetInstruc().(*Instruc_Number); ok {
		return x.Number
	}
	return 0
}

func (x *Instruc) GetData() []byte {
	if x, ok := x.GetInstruc().(*Instruc_Data); ok {
		return x.Data
	}
	return nil
}

type isInstruc_Instruc interface {
	isInstruc_Instruc()
}

type Instruc_Op struct {
	Op Op `protobuf:"varint,1,opt,name=op,proto3,enum=pbchain.Op,oneof"`
}

type Instruc_Number struct {
	Number int64 `protobuf:"varint,2,opt,name=number,proto3,oneof"`
}

type Instruc_Data struct {
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3,oneof"`
}

func (*Instruc_Op) isInstruc_Instruc() {}

func (*Instruc_Number) isInstruc_Instruc() {}

func (*Instruc_Data) isInstruc_Instruc() {}

type PrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D []byte `protobuf:"bytes,1,opt,name=d,proto3" json:"d,omitempty"`
}

func (x *PrivateKey) Reset() {
	*x = PrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey) ProtoMessage() {}

func (x *PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey.ProtoReflect.Descriptor instead.
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{7}
}

func (x *PrivateKey) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X []byte `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y []byte `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{8}
}

func (x *PublicKey) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *PublicKey) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R []byte `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	S []byte `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pbchain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbchain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_proto_pbchain_proto_rawDescGZIP(), []int{9}
}

func (x *Signature) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *Signature) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

var File_proto_pbchain_proto protoreflect.FileDescriptor

var file_proto_pbchain_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0xaf,
	0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72,
	0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65,
	0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x22, 0x5d, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x73, 0x22,
	0x76, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x69,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x52, 0x05, 0x74, 0x78, 0x49, 0x6e, 0x73, 0x12, 0x27,
	0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x52,
	0x06, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x73, 0x22, 0x6b, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x6e, 0x12,
	0x32, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x4f,
	0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x73, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x52, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x53, 0x69, 0x67, 0x22, 0x56, 0x0a, 0x05, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x52, 0x0c,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x08,
	0x4f, 0x75, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x63, 0x0a, 0x07, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x12, 0x1d, 0x0a,
	0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x4f, 0x70, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x22, 0x1a, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x64, 0x22, 0x27, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x79, 0x22, 0x27, 0x0a, 0x09,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x01, 0x73, 0x2a, 0x70, 0x0a, 0x02, 0x4f, 0x70, 0x12, 0x08, 0x0a, 0x04, 0x4f,
	0x50, 0x5f, 0x30, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x59, 0x10, 0x69, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x5f, 0x44, 0x55, 0x50, 0x10, 0x76,
	0x12, 0x0d, 0x0a, 0x08, 0x4f, 0x50, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x87, 0x01, 0x12,
	0x13, 0x0a, 0x0e, 0x4f, 0x50, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x56, 0x45, 0x52, 0x49, 0x46,
	0x59, 0x10, 0x88, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x4f, 0x50, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x31,
	0x36, 0x30, 0x10, 0xa9, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x4f, 0x50, 0x5f, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x53, 0x49, 0x47, 0x10, 0xac, 0x01, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x6f, 0x6e, 0x67, 0x6c, 0x69, 0x2f, 0x70,
	0x62, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_pbchain_proto_rawDescOnce sync.Once
	file_proto_pbchain_proto_rawDescData = file_proto_pbchain_proto_rawDesc
)

func file_proto_pbchain_proto_rawDescGZIP() []byte {
	file_proto_pbchain_proto_rawDescOnce.Do(func() {
		file_proto_pbchain_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pbchain_proto_rawDescData)
	})
	return file_proto_pbchain_proto_rawDescData
}

var file_proto_pbchain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_pbchain_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_pbchain_proto_goTypes = []interface{}{
	(Op)(0),             // 0: pbchain.Op
	(*BlockHeader)(nil), // 1: pbchain.BlockHeader
	(*Block)(nil),       // 2: pbchain.Block
	(*Transaction)(nil), // 3: pbchain.Transaction
	(*TxIn)(nil),        // 4: pbchain.TxIn
	(*TxOut)(nil),       // 5: pbchain.TxOut
	(*OutPoint)(nil),    // 6: pbchain.OutPoint
	(*Instruc)(nil),     // 7: pbchain.Instruc
	(*PrivateKey)(nil),  // 8: pbchain.PrivateKey
	(*PublicKey)(nil),   // 9: pbchain.PublicKey
	(*Signature)(nil),   // 10: pbchain.Signature
}
var file_proto_pbchain_proto_depIdxs = []int32{
	1, // 0: pbchain.Block.header:type_name -> pbchain.BlockHeader
	3, // 1: pbchain.Block.txs:type_name -> pbchain.Transaction
	4, // 2: pbchain.Transaction.tx_ins:type_name -> pbchain.TxIn
	5, // 3: pbchain.Transaction.tx_outs:type_name -> pbchain.TxOut
	6, // 4: pbchain.TxIn.prev_output:type_name -> pbchain.OutPoint
	7, // 5: pbchain.TxIn.script_sig:type_name -> pbchain.Instruc
	7, // 6: pbchain.TxOut.script_pubkey:type_name -> pbchain.Instruc
	0, // 7: pbchain.Instruc.op:type_name -> pbchain.Op
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_proto_pbchain_proto_init() }
func file_proto_pbchain_proto_init() {
	if File_proto_pbchain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_pbchain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pbchain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_pbchain_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Instruc_Op)(nil),
		(*Instruc_Number)(nil),
		(*Instruc_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pbchain_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pbchain_proto_goTypes,
		DependencyIndexes: file_proto_pbchain_proto_depIdxs,
		EnumInfos:         file_proto_pbchain_proto_enumTypes,
		MessageInfos:      file_proto_pbchain_proto_msgTypes,
	}.Build()
	File_proto_pbchain_proto = out.File
	file_proto_pbchain_proto_rawDesc = nil
	file_proto_pbchain_proto_goTypes = nil
	file_proto_pbchain_proto_depIdxs = nil
}
